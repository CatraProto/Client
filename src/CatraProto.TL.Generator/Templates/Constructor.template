using System;
using System.Collections.Generic;
using CatraProto.TL;
using CatraProto.TL.Interfaces;
using CatraProto.TL.Results;
using System.Diagnostics.CodeAnalysis;
using System.Linq;

#nullable disable
namespace ^Namespace^
{
	public partial class ^Class^ : ^Type^
	{
^FlagsEnums^

        [Newtonsoft.Json.JsonIgnore]
        public static int ConstructorId { get => ^ConstructorId^; }
        ^Properties^

        ^PublicConstructor^
        ^EmptyConstructorAccessibility^ ^Class^() 
        {
        }
		
		^MethodAccessibility^ void UpdateFlags() 
		{
^FlagsUpdate^
		}

		^MethodAccessibility^ WriteResult Serialize(Writer writer)
		{
^Serialization^
		}

		^MethodAccessibility^ ReadResult<IObject> Deserialize(Reader reader)
		{
^Deserialization^
		}
		
		public override string ToString()
		{
		    return "^ObjectRawName^";
		}

		^MethodAccessibility^ int GetConstructorId()
		{
			return ConstructorId;
		}

		#nullable enable
		^MethodAccessibility^ IObject? Clone()
		{
			^Clone^
		}
		#nullable disable
	}
}